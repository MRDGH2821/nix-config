# Auto-generated using compose2nix v0.3.3-pre.
{
  pkgs,
  lib,
  ...
}: {
  # Runtime
  virtualisation.docker = {
    enable = true;
    autoPrune.enable = true;
  };
  virtualisation.oci-containers.backend = "docker";

  # Containers
  virtualisation.oci-containers.containers."omni-tools" = {
    image = "iib0011/omni-tools:latest";
    ports = [
      "3081:80/tcp"
    ];
    log-driver = "journald";
    extraOptions = [
      "--hostname=omni-tools"
      "--network-alias=omni-tools"
      "--network=omni-tools_default"
    ];
  };
  systemd.services."docker-omni-tools" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
      RestartMaxDelaySec = lib.mkOverride 90 "1m";
      RestartSec = lib.mkOverride 90 "100ms";
      RestartSteps = lib.mkOverride 90 9;
    };
    after = [
      "docker-network-omni-tools_default.service"
    ];
    requires = [
      "docker-network-omni-tools_default.service"
    ];
    partOf = [
      "docker-compose-omni-tools-root.target"
    ];
    wantedBy = [
      "docker-compose-omni-tools-root.target"
    ];
  };

  # Networks
  systemd.services."docker-network-omni-tools_default" = {
    path = [pkgs.docker];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "docker network rm -f omni-tools_default";
    };
    script = ''
      docker network inspect omni-tools_default || docker network create omni-tools_default
    '';
    partOf = ["docker-compose-omni-tools-root.target"];
    wantedBy = ["docker-compose-omni-tools-root.target"];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-omni-tools-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = ["multi-user.target"];
  };
}
